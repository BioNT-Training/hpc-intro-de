[notes]
### 1
 
The point of this presentation is to briefly introduce some scale-up options, so that learners get a sense of the variety of ways this can be done, and the source of some of the overloading of terminology that will be used later in the lesson. This non-interactive activity should be kept brief.

### 2
A laptop.  Local tasks limited by small resources, but familiar to learners.
`
### 3

Computational at larger scales typically involves changes in how things are done, and connection to remote computer systems and transfer of data between systems. There are many ways to do it, and the terminology can be confusing. This presentation will step through some scale-up scenarios to help frame the problem.

### 4
First obvious way to scale, has more CPUs and memory, and more or faster storage.Typically shared, run commercial or open-source OSs, may be called a "compute server".  Typical tasks are operations of large user-facing programs, like scientific models or visualizations.


### 5
Cloud systems physically resemble clusters or supercomputers, but with greater heterogeneity among components, and less coupling, often without an interconnect at all.  Cloud servers are generally accessed by connecting to their services over the network. Multiple VMs may reside on individual physical machines. Typical tasks are driven by user connections from the outside to the various "front end" services (e.g. web sites) which pass traffic on to the "back end" servers (e.g. databases) to present results to users.

### 6
Cloud systems physically resemble clusters or supercomputers, but with greater heterogeneity among components, and less coupling, often without an interconnect at all.  Cloud servers are generally accessed by connecting to their services over the network. Multiple VMs may reside on individual physical machines. Typical tasks are driven by user connections from the outside to the various "front end" services (e.g. web sites) which pass traffic on to the "back end" servers (e.g. databases) to present results to users.

### 7
In the usual HPC workflow, users do not communicate directly with compute nodes, but work through a scheduling system to distribute tasks.
